name: tests

# This is seperate becouse it's not related the reales of new versions
# and I want to keep test results separate from bulding and releasing the app.

on:
    push:
      branches: [ "main" ] # Triggers on pushes to main
      tags: [ "v*" ] # Triggers on any tag with the prefix 'v'
    pull_request:
      branches: [ "main" ] # Triggers on pull requests

# My original test solution
# jobs:
#   tests:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1

#       - name: Run tests and generate test report
#         run: |
#           go test -v -json ./... | go run github.com/mfridman/tparse@latest -all
#         continue-on-error: true

# The official gotestfmt solution
jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    steps:
      # Checkout your project with git
      - name: Checkout
        uses: actions/checkout@v2

      # Install Go on the VM running the action.
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      # Install gotestfmt on the VM running the action.
      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2
        with:
          # Optional: pass GITHUB_TOKEN to avoid rate limiting.
          token: ${{ secrets.GITHUB_TOKEN }}

      # Alternatively, install using go install
      - name: Set up gotestfmt
        run: go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@latest

      # Run tests with nice formatting. Save the original log in /tmp/gotest.log
      - name: Run tests
        run: |
          set -euo pipefail
          go test -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

      # Upload the original go test log as an artifact for later review.
      - name: Upload test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error