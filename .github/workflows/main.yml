name: main

# This workflow takes place of tests.yml and release.yml
# This is essentially the same but written as a parallel job for each system to test where tests pass

on:
    push:
      branches: [ "main" ] # Triggers on pushes to main
      tags: [ "v*" ] # Triggers on any tag with the prefix 'v'
    pull_request:
      branches: [ "main" ] # Triggers on pull requests
# Create a strategy matrix and define the runner systems there

jobs:
  testAndBuild:
    strategy:
      fail-fast: false
      matrix:
        testAndBuild: [ 
            {name: linux, os: ubuntu-latest,},
            {name: windows, os: windows-latest,},
            {name: macos, os: macos-latest },
            ]
    runs-on: ${{ matrix.testAndBuild.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            submodules: true

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.5

      - name: Set up gotestfmt
        uses: GoTestTools/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run go test
        shell: bash
        run: |
          set -euo pipefail
          go test -json -p 1 -v ./... 2>&1 | tee $RUNNER_TEMP/gotest.log
  
      - name: Format log output
        shell: bash
        run: |
          set -euo pipefail
          cat $RUNNER_TEMP/gotest.log | gotestfmt

      - name: Generate resource files
        if: matrix.testAndBuild.name == 'windows'
        run: |
          go run github.com/tc-hib/go-winres@latest make

      - name: Build
        run: |
          go build -C . -o ./bin/kopycat-${{ matrix.testAndBuild.name }} -ldflags "-s -w" 

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: kopycat-${{ matrix.testAndBuild.name }}
          path: ./bin/kopycat-${{ matrix.testAndBuild.name }}

  collectArtifacts:
    needs: testAndBuild
    runs-on: ubuntu-latest
    steps:
    #   - name: Checkout
    #     uses: actions/checkout@v3
        
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: kopycat-*
          path: ./artifacts/
        
      - name: Release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            artifacts/kopycat*
          generate_release_notes: true
